[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spotify-youtube-converter"
version = "1.0.0"
description = "A powerful Streamlit web application that converts Spotify playlists to YouTube Music playlists without requiring Spotify Premium"
readme = "README.md"
license = {text = "GPL-3.0-or-later"}
authors = [
    {name = "Matthew Hoendorf", email = "matt@hoendorf.com"}
]
maintainers = [
    {name = "Matthew Hoendorf", email = "matt@hoendorf.com"}
]
keywords = [
    "spotify",
    "youtube-music",
    "playlist",
    "converter",
    "music",
    "streamlit",
    "music-league"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: Web Environment",
    "Framework :: Streamlit"
]
requires-python = ">=3.12"
dependencies = [
    "streamlit>=1.48.0",
    "spotipy>=2.25.1",
    "ytmusicapi>=1.11.0",
    "python-dotenv>=1.1.1",
    "pandas>=2.3.1",
    "google-auth-oauthlib>=1.2.2",
    "google-auth-httplib2>=0.2.0",
    "google-api-python-client>=2.178.0",
    "pillow>=11.3.0",
    "requests>=2.32.4"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
docker = [
    "gunicorn>=21.0.0"
]

[project.urls]
Homepage = "https://github.com/matthoendorf/spotify-youtube-converter"
Repository = "https://github.com/matthoendorf/spotify-youtube-converter.git"
Issues = "https://github.com/matthoendorf/spotify-youtube-converter/issues"
Discussions = "https://github.com/matthoendorf/spotify-youtube-converter/discussions"
Documentation = "https://github.com/matthoendorf/spotify-youtube-converter/blob/main/README.md"

[project.scripts]
spotify-youtube-converter = "streamlit_app:main"

[tool.setuptools]
packages = ["services", "utils", "config"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | data
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["services", "utils", "config"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "spotipy.*",
    "ytmusicapi.*",
    "streamlit.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=services",
    "--cov=utils",
    "--cov=config",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["services", "utils", "config"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    "data"
]

[tool.bandit]
exclude_dirs = ["tests", "data"]
skips = ["B101", "B601"]
